{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../sources/javascript/AjaxLoading.js","../sources/javascript/InstaSlider.js","../sources/javascript/LinkNavigation.js","../sources/javascript/ScrollLethargy.js","../sources/javascript/Welcome.js","../sources/javascript/index.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import InstaSlider from './InstaSlider.js'\n\nexport default function AjaxLoading (url)  {\n  jQuery(document).ready(function ($) {\n\n      // start perfom ajax request function with url parameter\n      perform_ajax_request( url )\n\n      /**\n       * construct ajax request\n       * @param {*} url\n       */\n      function perform_ajax_request( url ) {\n          $.ajax({\n              url    : url,\n              type   : 'POST',\n              headers: {\n                  'X-Requested-With':'BAWXMLHttpRequest'\n              }\n          }).done( function( data ) {\n              history.pushState(data, 'louis J', url);\n              switch_content( data );\n          }).error( function() {\n              console.log(\"we can't load de page\")\n          });\n      }\n\n      function loadScript () {\n        var pathName = window.location.pathname;\n        pathName = pathName.split(\"/\");\n        pathName = pathName[1];\n        if(pathName === \"galerie\") {\n            loadGalerieScript();\n        }\n      }\n\n      function loadGalerieScript() {\n\n        let instaSlider = null;\n\n        instaSlider = new InstaSlider();\n        instaSlider.init();\n      }\n\n      /**\n       * replace current content\n       * @param {*} data\n       */\n      function switch_content( data ) {\n          $('main').remove();\n          $('.bottomNav').after($(data));\n          loadScript();\n      }\n  });\n}\n\n","\nclass InstaSlider\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n      this.mover = document.querySelector('#sbi_images')\n      this.single = document.querySelectorAll('.sbi_item')\n      this.next = document.querySelector('.galerie__next')\n      this.prev = document.querySelector('.galerie__prev')\n      this.max = this.single.length - 4\n      this.index = 0\n      this.slideIndex = 0\n      this.step = 25\n      this.value = 0\n    }\n\n    /**\n     * prev click event\n     */\n     prevClick() {\n      this.prev.addEventListener('click', (e) => {\n        e.preventDefault()\n        if(this.slideIndex === 0) {\n          this.index = 0\n          this.slideIndex = 0\n        }\n        else {\n          this.index++\n          this.slideIndex--\n        }\n        this.moveSlide()\n      })\n     }\n\n    /**\n     * next click event\n     */\n     nextClick() {\n      this.next.addEventListener('click', (e) => {\n        e.preventDefault()\n        if(this.slideIndex === this.max) {\n          this.index = 0\n          this.slideIndex = 0\n        }\n        else {\n          this.index--\n          this.slideIndex++\n        }\n\n        this.moveSlide()\n      })\n     }\n\n    /**\n     *\n     * next click event\n     */\n     moveSlide() {\n      this.value = this.index * this.step\n      for (let single of this.single) {\n        single.classList.remove('galerie__instaLittle')\n        single.classList.remove('galerie__instaBig')\n      }\n\n      this.mover.style.transform ='translateX('+ this.value +'vw'\n     }\n\n    /**\n     *\n     * display bigger image\n     */\n    clickImage() {\n      for (let single of this.single) {\n        // console.log(single)\n        single.addEventListener('click', (e) =>  {\n          e.preventDefault()\n          for (let singleBis of this.single) {\n            singleBis.classList.remove('galerie__instaLittle')\n            singleBis.classList.remove('galerie__instaBig')\n            singleBis.classList.add('galerie__instaLittle')\n          }\n          single.classList.add('galerie__instaBig')\n        })\n      }\n    }\n\n    /**\n     * watch for loading of instagram content\n     */\n\n    setVar() {\n      var watching = setInterval( () => {\n        if(document.querySelector('.sbi_item') !== null) {\n\n          //set variable\n          this.mover = document.querySelector('#sbi_images')\n          this.single = document.querySelectorAll('.sbi_item')\n          this.next = document.querySelector('.galerie__next')\n          this.prev = document.querySelector('.galerie__prev')\n          this.max = this.single.length - 4\n\n          //init function\n          this.prevClick()\n          this.nextClick()\n          this.clickImage()\n\n          //clear watching\n          clearInterval(watching);\n          return;\n        }\n      }, 10);\n    }\n\n    init() {\n      if(this.mover != null) {\n        this.setVar();\n      }\n    }\n}\n\nexport default InstaSlider\n\n","import AjaxLoading from './AjaxLoading.js'\n\nclass LinkNavigation\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n        this.linkAbout = document.querySelector('.topNav__about')\n    }\n\n    /**\n     * event on about link for trigger ajax callback\n     */\n    clickAbout() {\n        this.linkAbout.addEventListener('click', (e) => {\n            e.preventDefault()\n            let url = this.linkAbout.getAttribute( 'href' )\n            AjaxLoading(url)\n        })\n    }\n    /**\n     * event on history API for trigger ajax callback\n     */\n    history() {\n        window.addEventListener( 'popstate', function(e) {\n            e.preventDefault();\n            var url = window.location.href;\n            AjaxLoading(url)\n        } );\n    }\n    init() {\n        this.clickAbout()\n        this.history()\n    }\n}\n\nexport default LinkNavigation\n\n","import AjaxLoading from './AjaxLoading.js'\n\nclass ScrollLethargy\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n\n        this.content = document.querySelector('body');\n        // this.insta = true;\n        this.music = true;\n\n        // home parameter\n        this.home = true;\n        this.contentHome = document.querySelector('.homePage');\n        this.homeLink = document.querySelector('.goToGalerie');\n\n        //galerie parameter\n        this.insta = true;\n        this.instaLink = document.querySelector('.goToHome');\n        this.scriptA = document.querySelector('.insta-scriptA');\n    }\n\n    /**\n     * Send Ajax request\n     * @param url url of the page\n     */\n    sendAjax(url) {\n      AjaxLoading(url)\n    }\n\n    /**\n     * lethargy event for Galerie\n     */\n    homePage() {\n      let lethargy = new Lethargy();\n      var scroll =  (e) =>  {\n        if (this.home === true) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (lethargy.check(e) === -1) {\n\n            this.home = false;\n            this.sendAjax(this.homeLink.getAttribute('data-galeriePage'))\n\n          }\n        }\n      };\n      this.contentHome.addEventListener('mousewheel', scroll);\n      this.contentHome.addEventListener('DOMMouseScroll', scroll);\n      this.contentHome.addEventListener('wheel', scroll);\n      this.contentHome.addEventListener('MozMousePixelScroll', scroll);\n    }\n\n        /**\n     * lethargy event for Galerie\n     */\n    scrolling() {\n      let lethargy = new Lethargy();\n      var scroll =  (e) =>  {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this.home === true) {\n          if(document.querySelector('.goToGalerie') !== null) {\n            if (lethargy.check(e) === -1) {\n\n              this.homeLink = document.querySelector('.goToGalerie');\n              this.home = false;\n              this.insta = true;\n              this.sendAjax(this.homeLink.getAttribute('data-galeriePage'))\n\n            }\n          }\n        }\n        if (this.insta === true) {\n          if(document.querySelector('.goToHome') !== null) {\n            if (lethargy.check(e) === 1) {\n              this.instaLink = document.querySelector('.goToHome');\n              this.insta = false;\n              this.home = true;\n              this.scriptA.remove();\n              this.sendAjax(this.instaLink.getAttribute('data-homePage'))\n            }\n          }\n        }\n      };\n      this.content.addEventListener('mousewheel', scroll);\n      this.content.addEventListener('DOMMouseScroll', scroll);\n      this.content.addEventListener('wheel', scroll);\n      this.content.addEventListener('MozMousePixelScroll', scroll);\n    }\n\n    init() {\n\n        this.scrolling()\n    }\n}\n\nexport default ScrollLethargy\n\n","class Welcome\n{\n    /**\n     * Constructor\n     */\n    constructor( options )\n    {\n        console.log( '%c made with ღ by Alexis benoliel' , 'color: #484AE0' )\n        console.log('> Portfolio: https://alexisbenoliel.fr')\n    }\n}\n\nexport default Welcome\n","import Welcome from './Welcome.js'\nimport LinkNavigation from './LinkNavigation.js'\nimport InstaSlider from './InstaSlider.js'\nimport ScrollLethargy from './ScrollLethargy.js'\n\n\nfunction init() {\n  let welcome = new Welcome()\n\n  /**\n   * linkNavigation.js\n   * create the ajax requeste if we click on a link\n   */\n\n  let linkNavigation = new LinkNavigation();\n  linkNavigation.init();\n\n  /**\n   * InstaSlider.js\n   * init a slider for display instagram feed\n   */\n\n  let instaSlider = new InstaSlider();\n  instaSlider.init();\n\n  /**\n   * ScrollLethargy.js\n   * add scroll event for home page and galerie page, and musique page\n   */\n\n  let scrollLethargy = new ScrollLethargy();\n  scrollLethargy.init();\n}\n\nwindow.onload = init;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
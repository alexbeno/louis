{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../sources/javascript/AjaxLoading.js","../sources/javascript/Cursor.js","../sources/javascript/Drag.js","../sources/javascript/InstaSlider.js","../sources/javascript/LinkNavigation.js","../sources/javascript/MainTransition.js","../sources/javascript/ScrollLethargy.js","../sources/javascript/Welcome.js","../sources/javascript/index.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import InstaSlider from './InstaSlider.js'\nimport MainTransition from './MainTransition.js'\n\nexport default function AjaxLoading (url)  {\n  jQuery(document).ready(function ($) {\n\n      // start perfom ajax request function with url parameter\n      perform_ajax_request( url )\n\n      /**\n       * construct ajax request\n       * @param {*} url\n       */\n      function perform_ajax_request( url ) {\n          $.ajax({\n              url    : url,\n              type   : 'POST',\n              headers: {\n                  'X-Requested-With':'BAWXMLHttpRequest'\n              }\n          }).done( function( data ) {\n              mainTrans(data);\n              history.pushState(data, 'louis J', url);\n\n          }).error( function() {\n              console.log(\"we can't load de page\")\n          });\n      }\n\n      function mainTrans (data) {\n        let mainTransition = new MainTransition();\n        mainTransition.init();\n        setTimeout(function(){\n            switch_content( data );\n        }, 1000);\n\n        setTimeout(function(){\n            mainTransition.return();\n        }, 1200);\n      }\n\n      function loadScript () {\n        var pathName = window.location.pathname;\n        pathName = pathName.split(\"/\");\n        pathName = pathName[1];\n        if(pathName === \"galerie\") {\n            loadGalerieScript();\n        }\n      }\n\n      function loadGalerieScript() {\n\n        let instaSlider = null;\n\n        instaSlider = new InstaSlider();\n        instaSlider.init();\n      }\n\n      /**\n       * replace current content\n       * @param {*} data\n       */\n      function switch_content( data ) {\n          $('main').remove();\n          $('.bottomNav').after($(data));\n          loadScript();\n      }\n  });\n}\n\n","class Cursor\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n        this.cursor = document.querySelector('.cursor')\n        this.image = document.querySelector('.cursor__img')\n    }\n\n    mouseEvent () {\n        const mouse = { x: 0.5, y: 1 };\n        window.addEventListener('mousemove', event => {\n            mouse.x = event.clientX;\n            mouse.y = event.clientY;\n            this.moveCursor (mouse.x, mouse.y);\n        });\n    }\n\n    moveCursor (x, y) {\n        let top = y - this.cursor.offsetHeight / 2;\n        let left = x - this.cursor.offsetWidth / 2;\n        this.cursor.style.top = top + 'px';\n        this.cursor.style.left = left + 'px';\n    }\n\n    dragCursor () {\n        window.addEventListener('mousedown', () => {\n            if(document.querySelector('.homePage') !== null || document.querySelector('.musiquePage') !== null ) {\n                let dragCursor = this.image.getAttribute('data-drag');\n                this.image.setAttribute('src', dragCursor)\n            }\n        });\n        window.addEventListener('mouseup', () => {\n            if(document.querySelector('.home') !== null || document.querySelector('.musiquePage') !== null) {\n                let dragCursor = this.image.getAttribute('data-normal');\n                this.image.setAttribute('src', dragCursor)\n            }\n        });\n    }\n\n    init() {\n        this.mouseEvent();\n        this.dragCursor()\n    }\n}\n\nexport default Cursor\n\n","class Drag\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n        this.mover = document.querySelector('.musiquePage__dragMover');\n        this.single = document.querySelectorAll('.musiquePage__drag');\n        this.pochette = document.querySelectorAll('.musiquePage__drag__img');\n        this.singleOne = document.querySelector('.musiquePage__drag');\n        this.canDrag = true;\n    }\n\n    setMoverSize() {\n      this.numberOfAlbum = this.single.length;\n      this.size = 80 * this.numberOfAlbum + 10;\n      this.mover.style.width = this.size + 'vw';\n    }\n\n    /**\n     * event for detect the drag\n     * @function changeAlbum()\n     */\n    dragEvent () {\n      let that = this;\n      let element = document.querySelector('.musiquePage__dragMover');\n      let x = 0;\n      let y = 0;\n      interact(element)\n      .draggable({\n        max : 1,\n        snap: {\n          targets: [\n            interact.createSnapGrid({ x:1, y: 1 })\n          ],\n          range: Infinity,\n          relativePoints: [ { x: 5, y: 5 } ]\n        },\n        inertia: true,\n        restrict: {\n          elementRect: { top: 0, left: 0, bottom: 1, right: 1 },\n          endOnly: true\n        },\n      })\n\n      .on('dragmove', function (event) {\n        if(that.canDrag === true) {\n\n          x += event.dx;\n          y = event.dy;\n          let size = (element.offsetWidth - element.offsetWidth * 2) + that.singleOne.offsetWidth\n          console.log(parseFloat(element.getAttribute('data-x')))\n          if( size < parseFloat(element.getAttribute('data-x')) && parseFloat(element.getAttribute('data-x')) < 1 )\n          {\n            that.dragMoveListener(element, event.dx)\n          }\n          else if( parseFloat(element.getAttribute('data-x')) > 0 ) {\n            x = -1\n            element.setAttribute('data-x', -1)\n            that.dragMoveListener(element, event.dx)\n          }\n          else {\n            x = size - 1\n            element.setAttribute('data-x', size - 1)\n            that.dragMoveListener(element, event.dx)\n          }\n        }\n      });\n\n    }\n\n    dragMoveListener (el, dx) {\n      var target = el,\n      // keep the dragged position in the data-x/data-y attributes\n      x = (parseFloat(target.getAttribute('data-x'))) + dx;\n\n      // translate the element\n      target.style.webkitTransform =\n      target.style.transform =\n        'translate(' + x + 'px)';\n\n      // update the posiion attributes\n      target.setAttribute('data-x', x);\n    }\n\n    clickEvent() {\n      for (const single of this.single) {\n        console.log(single.childNodes[1])\n        single.childNodes[3].addEventListener('click', (e) => {\n          single.classList.add('musiquePage__drag--active')\n          single.childNodes[1].classList.add('musiquePage__content--active')\n          single.childNodes[5].classList.add('musiquePage__drag__title--active')\n          this.mover.classList.add('musiquePage__dragMover--active')\n          this.canDrag = false;\n        })\n      }\n    }\n\n    init() {\n        this.dragEvent()\n        this.setMoverSize();\n        this.clickEvent();\n    }\n}\n\nexport default Drag\n\n","\nclass InstaSlider\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n      this.mover = document.querySelector('#sbi_images')\n      this.single = document.querySelectorAll('.sbi_item')\n      this.next = document.querySelector('.galerie__next')\n      this.prev = document.querySelector('.galerie__prev')\n      this.max = this.single.length - 4\n      this.index = 0\n      this.slideIndex = 0\n      this.step = 25\n      this.value = 0\n    }\n\n    /**\n     * prev click event\n     */\n     prevClick() {\n      this.prev.addEventListener('click', (e) => {\n        e.preventDefault()\n        if(this.slideIndex === 0) {\n          this.index = 0\n          this.slideIndex = 0\n        }\n        else {\n          this.index++\n          this.slideIndex--\n        }\n        this.moveSlide()\n      })\n     }\n\n    /**\n     * next click event\n     */\n     nextClick() {\n      this.next.addEventListener('click', (e) => {\n        e.preventDefault()\n        if(this.slideIndex === this.max) {\n          this.index = 0\n          this.slideIndex = 0\n        }\n        else {\n          this.index--\n          this.slideIndex++\n        }\n\n        this.moveSlide()\n      })\n     }\n\n    /**\n     *\n     * next click event\n     */\n     moveSlide() {\n      this.value = this.index * this.step\n      for (let single of this.single) {\n        single.classList.remove('galerie__instaLittle')\n        single.classList.remove('galerie__instaBig')\n      }\n\n      this.mover.style.transform ='translateX('+ this.value +'vw'\n     }\n\n    /**\n     *\n     * display bigger image\n     */\n    clickImage() {\n      for (let single of this.single) {\n        // console.log(single)\n        single.addEventListener('click', (e) =>  {\n          e.preventDefault()\n\n          if(single.classList.contains('galerie__instaBig') === true) {\n            for (let singleBis of this.single) {\n              singleBis.classList.remove('galerie__instaLittle')\n              singleBis.classList.remove('galerie__instaLittle')\n              singleBis.classList.remove('galerie__instaBig')\n            }\n          }\n          else {\n            for (let singleBis of this.single) {\n              singleBis.classList.remove('galerie__instaLittle')\n              singleBis.classList.add('galerie__instaLittle')\n              singleBis.classList.remove('galerie__instaBig')\n            }\n            single.classList.add('galerie__instaBig')\n          }\n        })\n      }\n    }\n\n    /**\n     * watch for loading of instagram content\n     */\n\n    setVar() {\n      var watching = setInterval( () => {\n        if(document.querySelector('.sbi_item') !== null) {\n\n          //set variable\n          this.mover = document.querySelector('#sbi_images')\n          this.single = document.querySelectorAll('.sbi_item')\n          this.next = document.querySelector('.galerie__next')\n          this.prev = document.querySelector('.galerie__prev')\n          this.max = this.single.length - 4\n\n          //init function\n          this.prevClick()\n          this.nextClick()\n          this.clickImage()\n\n          //clear watching\n          clearInterval(watching);\n          return;\n        }\n      }, 10);\n    }\n\n    init() {\n      if(this.mover != null) {\n        this.setVar();\n      }\n    }\n}\n\nexport default InstaSlider\n\n","import AjaxLoading from './AjaxLoading.js'\n\nclass LinkNavigation\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n        this.linkAbout = document.querySelector('.topNav__about')\n    }\n\n    /**\n     * event on about link for trigger ajax callback\n     */\n    clickAbout() {\n        this.linkAbout.addEventListener('click', (e) => {\n            e.preventDefault()\n            let url = this.linkAbout.getAttribute( 'href' )\n            AjaxLoading(url)\n        })\n    }\n    /**\n     * event on history API for trigger ajax callback\n     */\n    history() {\n        window.addEventListener( 'popstate', function(e) {\n            e.preventDefault();\n            var url = window.location.href;\n            AjaxLoading(url)\n        } );\n    }\n    init() {\n        this.clickAbout()\n        this.history()\n    }\n}\n\nexport default LinkNavigation\n\n","class MainTransition\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n      this.cards = document.querySelectorAll('.trans__single');\n      this.logo = document.querySelector('.trans__logo');\n      this.main = document.querySelector('.trans');\n    }\n\n    return() {\n      for (const card of this.cards) {\n        card.classList.add('trans__single--return')\n      }\n      this.logo.classList.add('trans__logo--return')\n      setTimeout( () => {\n        this.main.classList.remove('trans--active')\n        setTimeout( () => {\n          for (const card of this.cards) {\n            card.classList.remove('trans__single--active')\n            card.classList.remove('trans__single--return')\n            this.logo.classList.remove('trans__logo--active')\n            this.logo.classList.remove('trans__logo--return')\n          }\n        }, 100);\n      }, 1100);\n    }\n\n    init() {\n      this.main.classList.add('trans--active')\n      setTimeout( () => {\n        for (const card of this.cards) {\n          card.classList.add('trans__single--active')\n        }\n        this.logo.classList.add('trans__logo--active')\n      }, 100);\n    }\n}\n\nexport default MainTransition\n\n","import AjaxLoading from './AjaxLoading.js'\n\nclass ScrollLethargy\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n\n        this.content = document.querySelector('body');\n        // this.insta = true;\n        this.music = true;\n\n        // home parameter\n        this.home = true;\n        this.contentHome = document.querySelector('.homePage');\n        this.homeLink = document.querySelector('.goToGalerie');\n\n        //galerie parameter\n        this.insta = true;\n        this.instaLink = document.querySelector('.goToHome');\n        this.scriptA = document.querySelector('.insta-scriptA');\n    }\n\n    /**\n     * Send Ajax request\n     * @param url url of the page\n     */\n    sendAjax(url) {\n      AjaxLoading(url)\n    }\n\n    /**\n     * lethargy event for Galerie\n     */\n    homePage() {\n      let lethargy = new Lethargy();\n      var scroll =  (e) =>  {\n        if (this.home === true) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (lethargy.check(e) === -1) {\n\n            this.home = false;\n            this.sendAjax(this.homeLink.getAttribute('data-galeriePage'))\n\n          }\n        }\n      };\n      this.contentHome.addEventListener('mousewheel', scroll);\n      this.contentHome.addEventListener('DOMMouseScroll', scroll);\n      this.contentHome.addEventListener('wheel', scroll);\n      this.contentHome.addEventListener('MozMousePixelScroll', scroll);\n    }\n\n        /**\n     * lethargy event for Galerie\n     */\n    scrolling() {\n      let lethargy = new Lethargy();\n      var scroll =  (e) =>  {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this.home === true) {\n          if(document.querySelector('.goToGalerie') !== null) {\n            if (lethargy.check(e) === -1) {\n\n              this.homeLink = document.querySelector('.goToGalerie');\n              this.home = false;\n              this.insta = true;\n              this.sendAjax(this.homeLink.getAttribute('data-galeriePage'))\n\n            }\n          }\n        }\n        if (this.insta === true) {\n          if(document.querySelector('.goToHome') !== null) {\n            if (lethargy.check(e) === 1) {\n              this.instaLink = document.querySelector('.goToHome');\n              this.insta = false;\n              this.home = true;\n              this.scriptA.remove();\n              this.sendAjax(this.instaLink.getAttribute('data-homePage'))\n            }\n          }\n        }\n      };\n      this.content.addEventListener('mousewheel', scroll);\n      this.content.addEventListener('DOMMouseScroll', scroll);\n      this.content.addEventListener('wheel', scroll);\n      this.content.addEventListener('MozMousePixelScroll', scroll);\n    }\n\n    init() {\n\n        this.scrolling()\n    }\n}\n\nexport default ScrollLethargy\n\n","class Welcome\n{\n    /**\n     * Constructor\n     */\n    constructor( options )\n    {\n        console.log( '%c made with ღ by Alexis benoliel' , 'color: #484AE0' )\n        console.log('> Portfolio: https://alexisbenoliel.fr')\n    }\n}\n\nexport default Welcome\n","import Welcome from './Welcome.js'\nimport LinkNavigation from './LinkNavigation.js'\nimport InstaSlider from './InstaSlider.js'\nimport ScrollLethargy from './ScrollLethargy.js'\nimport Cursor from './Cursor.js'\nimport Drag from './Drag.js'\n\n\nfunction init() {\n  let welcome = new Welcome()\n\n  /**\n   * linkNavigation.js\n   * create the ajax requeste if we click on a link\n   */\n\n  let linkNavigation = new LinkNavigation();\n  linkNavigation.init();\n\n  /**\n   * InstaSlider.js\n   * init a slider for display instagram feed\n   */\n\n  let instaSlider = new InstaSlider();\n  instaSlider.init();\n\n  /**\n   * ScrollLethargy.js\n   * add scroll event for home page and galerie page, and musique page\n   */\n\n  let scrollLethargy = new ScrollLethargy();\n  scrollLethargy.init();\n\n  /**\n   * Cursor.js\n   * transition of the page\n   */\n\n  let cursor = new Cursor();\n  cursor.init();\n\n  /**\n   * Drag.js\n   * drag musique page\n   */\n\n  let drag = new Drag();\n  drag.init();\n}\n\nwindow.onload = init;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
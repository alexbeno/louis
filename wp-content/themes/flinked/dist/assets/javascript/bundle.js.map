{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../sources/javascript/AjaxLoading.js","../sources/javascript/Cursor.js","../sources/javascript/Drag.js","../sources/javascript/InstaSlider.js","../sources/javascript/LinkNavigation.js","../sources/javascript/MainTransition.js","../sources/javascript/ResponsiveNav.js","../sources/javascript/ScrollLethargy.js","../sources/javascript/Welcome.js","../sources/javascript/index.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import InstaSlider from './InstaSlider.js'\nimport MainTransition from './MainTransition.js'\nimport Drag from './Drag.js'\n\nexport default function AjaxLoading (url, trans)  {\n  jQuery(document).ready(function ($) {\n\n      // start perfom ajax request function with url parameter\n      perform_ajax_request( url )\n\n      /**\n       * construct ajax request\n       * @param {*} url\n       */\n      function perform_ajax_request( url ) {\n          $.ajax({\n              url    : url,\n              type   : 'POST',\n              headers: {\n                  'X-Requested-With':'BAWXMLHttpRequest'\n              }\n          }).done( function( data ) {\n              if(trans != null && trans === \"musiqueTrans\") {\n                  musiqueTrans(data);\n              }\n              else if(trans != null && trans === \"menuTrans\") {\n                  menuTrans(data);\n              }\n              else {\n                mainTrans(data);\n              }\n              history.pushState(data, 'louis J', url);\n\n          }).error( function() {\n              console.log(\"we can't load de page\")\n          });\n      }\n\n      function mainTrans (data) {\n        let mainTransition = new MainTransition();\n        mainTransition.init();\n\n        var image = document.querySelector('.cursor__img')\n        var dragCursor = image.getAttribute('data-normal');\n        image.setAttribute('src', dragCursor)\n\n        setTimeout(function(){\n            switch_content( data );\n        }, 1000);\n\n        setTimeout(function(){\n            mainTransition.return();\n        }, 1200);\n      }\n\n      function menuTrans (data) {\n        switch_content( data );\n      }\n\n      function musiqueTrans (data) {\n        let mainTransition = new MainTransition();\n        mainTransition.init();\n\n        var image = document.querySelector('.cursor__img')\n        var dragCursor = image.getAttribute('data-normal');\n        image.setAttribute('src', dragCursor)\n\n        setTimeout(function(){\n            switch_content( data );\n        }, 1000);\n\n        setTimeout(function(){\n            mainTransition.return();\n        }, 1200);\n      }\n\n      function loadScript () {\n        var pathName = window.location.pathname;\n        pathName = pathName.split(\"/\");\n        pathName = pathName[1];\n        if(pathName === \"galerie\") {\n            loadGalerieScript();\n        }\n        if(pathName === \"\") {\n            loadHomeScript();\n        }\n        if(pathName === \"musique\") {\n            loadMusiqueScript();\n        }\n      }\n\n      function loadGalerieScript() {\n\n        let instaSlider = null;\n\n        instaSlider = new InstaSlider();\n        instaSlider.init();\n      }\n\n      function loadHomeScript() {\n        // silence\n      }\n\n      function loadMusiqueScript() {\n        let drag = null;\n        drag = new Drag();\n        drag.init();\n      }\n\n      /**\n       * replace current content\n       * @param {*} data\n       */\n      function switch_content( data ) {\n          $('main').remove();\n          $('.bottomNav').after($(data));\n          loadScript();\n      }\n  });\n}\n\n","class Cursor\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n        this.cursor = document.querySelector('.cursor')\n        this.image = document.querySelector('.cursor__img')\n    }\n\n    mouseEvent () {\n        const mouse = { x: 0.5, y: 1 };\n        window.addEventListener('mousemove', event => {\n            mouse.x = event.clientX;\n            mouse.y = event.clientY;\n            this.moveCursor (mouse.x, mouse.y);\n        });\n    }\n\n    moveCursor (x, y) {\n        let top = y - this.cursor.offsetHeight / 2;\n        let left = x - this.cursor.offsetWidth / 2;\n        this.cursor.style.top = top + 'px';\n        this.cursor.style.left = left + 'px';\n    }\n\n    dragCursor () {\n        window.addEventListener('mousedown', () => {\n            if(document.querySelector('.homePage') !== null) {\n                let dragCursor = this.image.getAttribute('data-drag');\n                this.image.setAttribute('src', dragCursor)\n            }\n        });\n        window.addEventListener('mouseup', () => {\n            if(document.querySelector('.homePage') !== null) {\n                let dragCursor = this.image.getAttribute('data-normal');\n                this.image.setAttribute('src', dragCursor)\n            }\n        });\n    }\n\n    init() {\n        this.mouseEvent();\n        this.dragCursor()\n    }\n}\n\nexport default Cursor\n\n","import MainTransition from './MainTransition.js'\nclass Drag\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n        this.page = document.querySelector('.musiquePage');\n        this.mover = document.querySelector('.musiquePage__dragMover');\n        this.single = document.querySelectorAll('.musiquePage__drag');\n        this.pochette = document.querySelectorAll('.musiquePage__drag__img');\n        this.singleOne = document.querySelector('.musiquePage__drag');\n        this.trans = document.querySelector('.album-trans');\n        this.navText = document.querySelector('.musiquePage__rightNavigation__texte');\n        this.navSubText = document.querySelector('.musiquePage__rightNavigation__subTexte');\n        this.exit = document.querySelector('.musiquePage__rightNavigation');\n        this.image = document.querySelector('.cursor__img')\n        this.canDrag = true;\n        this.active = false;\n        this.mainTransition = new MainTransition();\n    }\n\n    setMoverSize() {\n      this.numberOfAlbum = this.single.length;\n      this.size = 70 * this.numberOfAlbum + 10;\n      this.mover.style.width = this.size + 'vw';\n    }\n\n    unshowAlbum () {\n      let activeDrag = document.querySelector('.musiquePage__drag--active')\n      let activeContent = document.querySelector('.musiquePage__content--active')\n      let activeTitle = document.querySelector('.musiquePage__drag__title--active')\n      let activeMover = document.querySelector('.musiquePage__dragMover--active')\n\n      activeDrag.classList.remove('musiquePage__drag--active')\n      activeContent.classList.remove('musiquePage__content--active')\n      activeContent.classList.remove('musiquePage__content--block')\n      activeTitle.classList.remove('musiquePage__drag__title--active')\n      activeMover.classList.remove('musiquePage__dragMover--active')\n\n      for (const single of this.single) {\n        single.classList.remove('musiquePage__drag--none');\n      }\n\n      this.setMoverSize();\n    }\n\n    centerScreen(index) {\n\n      if(window.innerWidth > 380) {\n        let transScreen = 100 * index;\n\n        this.mover.style.webkitTransform =\n        this.mover.style.transform =\n          'translate(-' + transScreen + 'vw)';\n\n        this.numberOfAlbum = this.single.length;\n        this.size = 100 * this.numberOfAlbum;\n        this.mover.style.width = this.size + 'vw';\n      }\n    }\n\n    transitions() {\n      this.trans.style.display =\"block\";\n      setTimeout( () => {\n        this.trans.classList.add('album-trans--active')\n        let dragCursor = this.image.getAttribute('data-normal');\n        this.image.setAttribute('src', dragCursor)\n\n      }, 100);\n    }\n\n    transitionsReturn() {\n      this.setExit();\n      this.trans.classList.remove('album-trans--active')\n      setTimeout( () => {\n        this.trans.style.display =\"none\";\n      }, 800);\n    }\n\n    setExit() {\n      this.exit.style.opacity =\"1\";\n      this.navText.innerText = \"Fermer\"\n      this.navSubText.innerText = \"click\"\n      this.exit.style.cursor=\"pointer\"\n\n      this.exit.addEventListener('click', () => {\n        if(this.active === true) {\n          this.exit.style.cursor=\"initial\"\n          this.navText.innerText = this.navText.getAttribute('data-text');\n          this.navSubText.innerText = this.navSubText.getAttribute('data-text');\n          this.unshowAlbum();\n          let dragCursor = this.image.getAttribute('data-drag');\n          this.image.setAttribute('src', dragCursor)\n          this.exit.style.opacity =\"0\";\n          this.canDrag = true;\n        }\n      })\n    }\n\n    clickEvent() {\n      for (const [index, single ] of this.single.entries()) {\n        single.setAttribute('data-index', index);\n        single.childNodes[3].addEventListener('click', (e) => {\n          for (const singleBis of this.single) {\n            singleBis.classList.add('musiquePage__drag--none');\n          }\n          single.classList.remove('musiquePage__drag--none');\n          this.transitions()\n          this.canDrag = false;\n          this.active = true;\n          single.classList.add('active-album');\n\n          setTimeout( () => {\n            single.childNodes[1].classList.add('musiquePage__content--block')\n            setTimeout( () => {\n              this.centerScreen(index)\n              single.classList.add('musiquePage__drag--active')\n              single.childNodes[1].classList.add('musiquePage__content--active')\n              single.childNodes[5].classList.add('musiquePage__drag__title--active')\n              this.mover.classList.add('musiquePage__dragMover--active')\n            }, 100);\n          }, 800);\n\n          setTimeout(() => {\n              this.transitionsReturn()\n          }, 1000);\n        })\n      }\n    }\n\n    Inversescroll() {\n      let scrolling = 0;\n      let prevY = 0;\n      let prevX = 0;\n      var scroll = (event) => {\n\n        if(event.deltaY !== 0) {\n          scrolling += event.deltaY;\n          this.page.scrollTo(scrolling, 0);\n        }\n\n        prevX = event.deltaX;\n        prevY = event.deltaY;\n      }\n\n      this.page.addEventListener('mousewheel', scroll);\n      this.page.addEventListener('DOMMouseScroll', scroll);\n      this.page.addEventListener('wheel', scroll);\n      this.page.addEventListener('MozMousePixelScroll', scroll);\n    }\n\n    init() {\n      if(this.mover !== null) {\n        let dragCursor = this.image.getAttribute('data-drag');\n        this.image.setAttribute('src', dragCursor)\n        this.setMoverSize();\n        this.clickEvent();\n      }\n    }\n}\n\nexport default Drag\n\n","\nclass InstaSlider\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n      this.mover = document.querySelector('#sbi_images')\n      this.single = document.querySelectorAll('.sbi_item')\n      this.next = document.querySelector('.galerie__next')\n      this.prev = document.querySelector('.galerie__prev')\n      this.max = this.single.length - 4\n      this.index = 0\n      this.slideIndex = 0\n      this.step = 25\n      this.value = 0\n    }\n\n    /**\n     * prev click event\n     */\n     prevClick() {\n      this.prev.addEventListener('click', (e) => {\n        e.preventDefault()\n        if(this.slideIndex === 0) {\n          this.index = 0\n          this.slideIndex = 0\n        }\n        else {\n          this.index++\n          this.slideIndex--\n        }\n        this.moveSlide()\n      })\n     }\n\n    /**\n     * next click event\n     */\n     nextClick() {\n      this.next.addEventListener('click', (e) => {\n        e.preventDefault()\n        if(this.slideIndex === this.max) {\n          this.index = 0\n          this.slideIndex = 0\n        }\n        else {\n          this.index--\n          this.slideIndex++\n        }\n\n        this.moveSlide()\n      })\n     }\n\n    /**\n     *\n     * next click event\n     */\n     moveSlide() {\n      this.value = this.index * this.step\n      for (let single of this.single) {\n        single.classList.remove('galerie__instaLittle')\n        single.classList.remove('galerie__instaBig')\n      }\n\n      this.mover.style.transform ='translateX('+ this.value +'vw'\n     }\n\n    /**\n     *\n     * display bigger image\n     */\n    clickImage() {\n      for (let single of this.single) {\n        // console.log(single)\n        single.addEventListener('click', (e) =>  {\n          e.preventDefault()\n\n          if(single.classList.contains('galerie__instaBig') === true) {\n            for (let singleBis of this.single) {\n              singleBis.classList.remove('galerie__instaLittle')\n              singleBis.classList.remove('galerie__instaLittle')\n              singleBis.classList.remove('galerie__instaBig')\n            }\n          }\n          else {\n            for (let singleBis of this.single) {\n              singleBis.classList.remove('galerie__instaLittle')\n              singleBis.classList.add('galerie__instaLittle')\n              singleBis.classList.remove('galerie__instaBig')\n            }\n            single.classList.add('galerie__instaBig')\n          }\n        })\n      }\n    }\n\n    /**\n     * watch for loading of instagram content\n     */\n\n    setVar() {\n      var watching = setInterval( () => {\n        if(document.querySelector('.sbi_item') !== null) {\n\n          //set variable\n          this.mover = document.querySelector('#sbi_images')\n          this.single = document.querySelectorAll('.sbi_item')\n          this.next = document.querySelector('.galerie__next')\n          this.prev = document.querySelector('.galerie__prev')\n          this.max = this.single.length - 4\n\n          //init function\n          this.prevClick()\n          this.nextClick()\n          this.clickImage()\n\n          //clear watching\n          clearInterval(watching);\n          return;\n        }\n      }, 10);\n    }\n\n    init() {\n      if(this.mover != null) {\n        this.setVar();\n      }\n    }\n}\n\nexport default InstaSlider\n\n","import AjaxLoading from './AjaxLoading.js'\n\nclass LinkNavigation\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n        this.linkAbout = document.querySelector('.topNav__about')\n        this.linkHome = document.querySelector('.topNav__logo')\n        this.linkMusique = document.querySelector('.goToMusique');\n        this.linkGalerie = document.querySelector('.goToGalerie');\n    }\n\n    /**\n     * event on about link for trigger ajax callback\n     */\n    clickAbout() {\n        this.linkAbout.addEventListener('click', (e) => {\n            e.preventDefault()\n            let url = this.linkAbout.getAttribute( 'href' )\n            AjaxLoading(url)\n        })\n    }\n\n    /**\n     * event on about link for trigger ajax callback\n     */\n    clickHome() {\n        this.linkHome.addEventListener('click', (e) => {\n            e.preventDefault()\n            let url = this.linkHome.getAttribute( 'href' )\n            AjaxLoading(url)\n        })\n    }\n\n    /**\n     * event on musique link for trigger ajax callback\n     * FIXME: LinkNavigation.js:42 Uncaught TypeError: Cannot read property 'addEventListener' of null at LinkNavigation.clickMusique\n     */\n    clickMusique() {\n        // this.linkMusique.addEventListener('click', (e) => {\n        //     e.preventDefault()\n        //     let url = this.linkMusique.getAttribute( 'data-musiquePage' )\n        //     AjaxLoading(url)\n        // })\n    }\n\n    /**\n     * event on Galerie link for trigger ajax callback\n     * FIXME: LinkNavigation.js:55 Uncaught TypeError: Cannot read property 'addEventListener' of null at LinkNavigation.clickGalerie\n     */\n    clickGalerie() {\n        // this.linkGalerie.addEventListener('click', (e) => {\n        //     e.preventDefault()\n        //     let url = this.linkGalerie.getAttribute( 'data-galeriePage' )\n        //     AjaxLoading(url)\n        // })\n    }\n    /**\n     * event on history API for trigger ajax callback\n     */\n    history() {\n        window.addEventListener( 'popstate', function(e) {\n            e.preventDefault();\n            var url = window.location.href;\n            AjaxLoading(url)\n        } );\n    }\n    init() {\n        this.clickAbout()\n        this.clickHome()\n        this.clickMusique()\n        this.clickGalerie()\n        this.history()\n    }\n}\n\nexport default LinkNavigation\n\n","class MainTransition\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n      this.cards = document.querySelectorAll('.trans__single');\n      this.logo = document.querySelector('.trans__logo');\n      this.main = document.querySelector('.trans');\n    }\n\n    return() {\n      for (const card of this.cards) {\n        card.classList.add('trans__single--return')\n      }\n      this.logo.classList.add('trans__logo--return')\n      setTimeout( () => {\n        this.main.classList.remove('trans--active')\n        setTimeout( () => {\n          for (const card of this.cards) {\n            card.classList.remove('trans__single--active')\n            card.classList.remove('trans__single--return')\n            this.logo.classList.remove('trans__logo--active')\n            this.logo.classList.remove('trans__logo--return')\n          }\n        }, 100);\n      }, 1100);\n    }\n\n    init() {\n      this.main.classList.add('trans--active')\n      setTimeout( () => {\n        for (const card of this.cards) {\n          card.classList.add('trans__single--active')\n        }\n        this.logo.classList.add('trans__logo--active')\n      }, 100);\n    }\n}\n\nexport default MainTransition\n\n","import AjaxLoading from './AjaxLoading.js'\nclass ResponsiveNav\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n        this.button = document.querySelector('.responsiveMenu__icones')\n        this.nav = document.querySelector('.responsiveMenu')\n        this.transition = document.querySelectorAll('.trans__single')\n        this.transContent = document.querySelector('.trans');\n        this.link = document.querySelectorAll('.responsiveMenu__content__item');\n    }\n\n    opens() {\n        this.button.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.transContent.classList.add('trans--active')\n            setTimeout( () => {\n                for (const single of this.transition) {\n                    single.classList.add('trans__single--active')\n                }\n                this.nav.classList.add('responsiveMenu--active');\n            }, 100);\n        })\n    }\n    closes() {\n        for (const single of this.link) {\n            single.addEventListener('click', (e) => {\n                e.preventDefault();\n                for (const singles of this.transition) {\n                    singles.classList.add('trans__single--return')\n                }\n                this.nav.classList.add('responsiveMenu--return');\n                setTimeout( () => {\n                    let url = single.getAttribute( 'href' )\n                    AjaxLoading(url, \"menuTrans\")\n                  }, 200);\n                setTimeout( () => {\n                    this.transContent.classList.add('trans--return')\n                    setTimeout( () => {\n                        this.transContent.classList.remove('trans--active')\n                        this.nav.classList.remove('responsiveMenu--active')\n                        this.nav.classList.remove('responsiveMenu--return')\n                        for (const card of this.transition) {\n                          card.classList.remove('trans__single--active')\n                          card.classList.remove('trans__single--return')\n                        }\n                      }, 200);\n                }, 800);\n            })\n        }\n    }\n\n    init() {\n        this.opens();\n        this.closes();\n    }\n}\n\nexport default ResponsiveNav\n\n","import AjaxLoading from './AjaxLoading.js'\n\nclass ScrollLethargy\n{\n    /**\n     * Constructor\n     */\n    constructor(  )\n    {\n\n        this.content = document.querySelector('body');\n        // this.insta = true;\n        this.music = true;\n\n        // home parameter\n        this.home = true;\n        this.contentHome = document.querySelector('.homePage');\n        this.homeLink = document.querySelector('.goToGalerie');\n\n        //galerie parameter\n        this.insta = true;\n        this.instaLink = document.querySelector('.goToHome');\n        this.scriptA;\n    }\n\n    /**\n     * Send Ajax request\n     * @param url url of the page\n     */\n    sendAjax(url) {\n      AjaxLoading(url)\n    }\n\n    /**\n     * lethargy event for Galerie\n     */\n    homePage() {\n      let lethargy = new Lethargy();\n      var scroll =  (e) =>  {\n        if (this.home === true) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (lethargy.check(e) === -1) {\n\n            this.home = false;\n            this.sendAjax(this.homeLink.getAttribute('data-galeriePage'))\n\n          }\n        }\n      };\n      this.contentHome.addEventListener('mousewheel', scroll);\n      this.contentHome.addEventListener('DOMMouseScroll', scroll);\n      this.contentHome.addEventListener('wheel', scroll);\n      this.contentHome.addEventListener('MozMousePixelScroll', scroll);\n    }\n\n        /**\n     * lethargy event for Galerie\n     */\n    scrolling() {\n      let lethargy = new Lethargy();\n      var scroll =  (e) =>  {\n\n        if (this.home === true) {\n          if(document.querySelector('.goToGalerie') !== null) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (lethargy.check(e) === -1) {\n              this.homeLink = document.querySelector('.goToGalerie');\n              this.home = false;\n              this.insta = true;\n              this.sendAjax(this.homeLink.getAttribute('data-galeriePage'))\n\n            }\n          }\n        }\n        if (this.insta === true) {\n          if(document.querySelector('.goToHome') !== null) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (lethargy.check(e) === 1) {\n              this.instaLink = document.querySelector('.goToHome');\n              this.insta = false;\n              this.home = true;\n              this.scriptA = document.querySelector('.insta-scriptA');\n              this.scriptA.remove();\n              this.sendAjax(this.instaLink.getAttribute('data-homePage'))\n            }\n          }\n        }\n      };\n      this.content.addEventListener('mousewheel', scroll);\n      this.content.addEventListener('DOMMouseScroll', scroll);\n      this.content.addEventListener('wheel', scroll);\n      this.content.addEventListener('MozMousePixelScroll', scroll);\n    }\n\n    init() {\n\n        this.scrolling()\n    }\n}\n\nexport default ScrollLethargy\n\n","class Welcome\n{\n    /**\n     * Constructor\n     */\n    constructor( options )\n    {\n        console.log( '%c made with ღ by Alexis benoliel' , 'color: #484AE0' )\n        console.log('> Portfolio: https://alexisbenoliel.fr')\n    }\n}\n\nexport default Welcome\n","import Welcome from './Welcome.js'\nimport LinkNavigation from './LinkNavigation.js'\nimport InstaSlider from './InstaSlider.js'\nimport ScrollLethargy from './ScrollLethargy.js'\nimport Cursor from './Cursor.js'\nimport Drag from './Drag.js'\nimport ResponsiveNav from './ResponsiveNav.js'\n\nvar mobil = 380;\nvar screen = window.innerWidth;\n\nfunction init() {\n  let welcome = new Welcome()\n\n  /**\n   * linkNavigation.js\n   * create the ajax requeste if we click on a link\n   */\n\n  let linkNavigation = new LinkNavigation();\n  linkNavigation.init();\n\n  /**\n   * InstaSlider.js\n   * init a slider for display instagram feed\n   */\n\n  let instaSlider = new InstaSlider();\n  instaSlider.init();\n\n  /**\n   * ScrollLethargy.js\n   * add scroll event for home page and galerie page, and musique page\n   */\n\n   if(screen > mobil) {\n    let scrollLethargy = new ScrollLethargy();\n    scrollLethargy.init();\n   }\n\n  /**\n   * Cursor.js\n   * transition of the page\n   */\n\n  let cursor = new Cursor();\n  cursor.init();\n\n  /**\n   * Drag.js\n   * drag musique page\n   */\n\n  let drag = new Drag();\n  drag.init();\n\n  /**\n   * ResponsiveNav.js\n   * responsive menu\n   */\n\n  let responsiveNav = new ResponsiveNav();\n  responsiveNav.init();\n\n}\n\nwindow.onload = init;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}